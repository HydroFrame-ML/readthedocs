Examples
========
The following are a collection of examples using the python data access API.

Example to get the paths and metadata about parflow water table depth baseline::

    import hydrodata.data_catalog.data_access

    options = {
		"variable": "water_table_depth",
		"dataset": "baseline",
		"grid": "conus1",
		"period": "daily",
		"start_time" : "2005-09-29",
		"end_time" : "2005-10-03"
	}
    # Get path names to files
    paths = hydrodata.data_catalog.data_access.get_file_paths(options)

    assert len(paths) == 5    # 5 files between 9/29/2005-10/03/2005  (note - spans water year)
    assert paths[4] == "/hydrodata/PFCLM/CONUS1_baseline/simulations/daily/WY2006/wtd.daily.mean.003.pfb"

    # Get metadata about those files
    metadata = hydrodata.data_catalog.data_access.get_metadata(options)
    assert metadata["structure_type"] == "gridded"
    assert metadata["dataset_var"] == "wtd"
    assert metadata["units"] == "meters"
    assert metadata["file_type"] == "pfb"

Example subsetting of PFB forcing file using the data catalog::

	import hydrodata.data_catalog.data_access
	from parflow import read_pfb_sequence

	"""Demonstrate reading and susetting 5 days of hourly pfb pressure files."""

	options = {
		"variable": "pressure_head",
		"dataset": "baseline",
		"grid": "conus1",
		"period": "hourly",
		"start_time": "2005-09-29",
		"end_time": "2005-10-03",
	}
	paths = hydrodata.data_catalog.data_access.get_file_paths(options)

	# Read the data from the list of pfb files (5 days crossing a water year)
	# Subset the pfb files by x,y space constraints to an area of interest
	boundary_constraints = {
		"x": {"start": int(1076), "stop": int(1124)},
		"y": {"start": int(720), "stop": int(739)},
		"z": {"start": 0, "stop": 0},
	}
	data = read_pfb_sequence(paths, boundary_constraints)

	assert data.shape[0] == 5        # 5 days
	assert data.shape[1] == 24       # 24 hours
	assert data.shape[2] == 19       # 19 y points
	assert data.shape[3] == 48       # 48 x points